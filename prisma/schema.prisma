// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

model User {
  id            Int @id @default(autoincrement())
  phone         String   @unique
  otp           String?
  otpExpiresAt  DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  QrDevices QrDeviceInfo[]
  DeviceComplaints DeviceComplaint[]
}

model QrDeviceInfo {
  id              Int   @id @default(autoincrement())
  serialNumber    String   @unique
  purchaseDate    DateTime
  brand           String?   // optional: brand name like HP, Canon
  model           String?   // optional: model number
  warrantyStatus  String?   // optional: e.g. "active", "expired"
  warrantyPeriod  Int?      // optional: number of months or years
  deviceType      String?   // optional: e.g. "Printer", "Scanner"
  supportContact  String?   // optional: customer care contact
  firmwareVersion String?   // optional: firmware or software version
  registeredTo    String?   // optional: name/email of registered user
  location        String?   // optional: installation location
  extraInfo       Json?     // optional: any raw key-value object from QR

  // Relation to User
  userId          Int
  user            User      @relation(fields: [userId], references: [id])

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  DeviceComplaints DeviceComplaint[]
}


model DeviceComplaint {
  id             Int       @id @default(autoincrement())
  userId         Int
  deviceId       Int

  complaintType  String    // e.g., "Battery issue", "Charging problem"
  description    String?   // Optional additional description from user
  status         String    @default("Pending") // "Pending", "In Progress", "Resolved", "Rejected"
  raisedAt       DateTime  @default(now())
  resolvedAt     DateTime? // Set when resolved

  // Optional admin or system-assigned ticket ID or reference number
  ticketNumber   String?   @unique

  // Relation fields
  user           User      @relation(fields: [userId], references: [id])
  device         QrDeviceInfo @relation(fields: [deviceId], references: [id])

  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}
